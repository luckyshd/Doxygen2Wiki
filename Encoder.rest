This file describes the interface ISVCEncoder

.. contents:: 
    :local: 
    :depth: 2


Methods(ISVCEncoder)
============================


.. _ref-1ad68cd7269a23e2af216b60eb15ec9562:

Initialize
--------------------

initial the encoder


+--------+-------------------------+-------------+
|Name    |Type                     |Descritpion  |
+--------+-------------------------+-------------+
|pParam  |const`SEncParamBase`_ *  |             |
+--------+-------------------------+-------------+

.. _ref-1a109085ce1dadf49719876bdc62d0f76d:

InitializeExt
--------------------

Initilaize encoder by using extension parameters.


+--------+------------------------+-------------+
|Name    |Type                    |Descritpion  |
+--------+------------------------+-------------+
|pParam  |const`SEncParamExt`_ *  |             |
+--------+------------------------+-------------+

.. _ref-1aa2cfe4d19eb1814c8104926165aff00a:

GetDefaultParams
--------------------

Get the default extension parameters. if you want to change some parameters of
encoder, firstly you need to get the default encoding parameters, after that you
can change part of parameters you want to.


+--------+-------------------+-------------+
|Name    |Type               |Descritpion  |
+--------+-------------------+-------------+
|pParam  |`SEncParamExt`_ *  |             |
+--------+-------------------+-------------+

.. _ref-1a50824ed4c3b164806147adcd55c84b81:

Uninitialize
--------------------

uninitialize the encoder



.. _ref-1a8dd9e92a6721f001e95243d09cb4aff4:

EncodeFrame
--------------------

encode one frame


+----------+--------------------------+-------------+
|Name      |Type                      |Descritpion  |
+----------+--------------------------+-------------+
|kpSrcPic  |const`SSourcePicture`_ *  |             |
+----------+--------------------------+-------------+
|pBsInfo   |`SFrameBSInfo`_ *         |             |
+----------+--------------------------+-------------+

.. _ref-1a99d96e13e244724ffa82e0b6cb31f0d0:

EncodeParameterSets
--------------------

encode the parameters from output bit stream


+---------+-------------------+-------------+
|Name     |Type               |Descritpion  |
+---------+-------------------+-------------+
|pBsInfo  |`SFrameBSInfo`_ *  |             |
+---------+-------------------+-------------+

.. _ref-1a6a798481c3a6942d29abbc30fe43fbda:

ForceIntraFrame
--------------------

for encoder to encoder frame as IDR if bIDR set as true


+------+------+-------------+
|Name  |Type  |Descritpion  |
+------+------+-------------+
|bIDR  |bool  |             |
+------+------+-------------+

.. _ref-1a54140447c864135465d1a0b4c8c1b9bb:

SetOption
--------------------

set option for encoder, detail option type, please refer to enumurate
ENCODER_OPTION.


+-----------+--------------------+-------------+
|Name       |Type                |Descritpion  |
+-----------+--------------------+-------------+
|eOptionId  |`ENCODER_OPTION`_   |             |
+-----------+--------------------+-------------+
|pOption    |void *              |             |
+-----------+--------------------+-------------+

.. _ref-1a9a5fa028b139fab5762e76f423dfe237:

GetOption
--------------------

get option for encoder, detail option type, please refer to enumurate
ENCODER_OPTION.


+-----------+--------------------+-------------+
|Name       |Type                |Descritpion  |
+-----------+--------------------+-------------+
|eOptionId  |`ENCODER_OPTION`_   |             |
+-----------+--------------------+-------------+
|pOption    |void *              |             |
+-----------+--------------------+-------------+


Usage Example(ISVCEncoder)
============================
Example-1 use basic parameter

::

  Step1:setup encoder
       int rv = WelsCreateSVCEncoder (&encoder_);
       ASSERT_EQ (0, rv);
       ASSERT_TRUE (encoder_ != NULL);
  
  Step2:initilize by using base parameter
       SEncParamBase param;
       memset (&param, 0, sizeof (SEncParamBase));
       param.iUsageType = usageType;
       param.fMaxFrameRate = frameRate;
       param.iPicWidth = width;
       param.iPicHeight = height;
       param.iTargetBitrate = 5000000;
       param.iInputCsp = videoFormatI420;
       encoder_->Initialize (&param);
  
  Step3:set option, you aslo call SetOption during encoding   
       encoder_->SetOption (ENCODER_OPTION_TRACE_LEVEL, &g_LevelSetting);
  
  Step4: encoding and  store ouput bistream 
       int frameSize = width * height * 3 / 2;
       BufferedData buf;
       buf.SetLength (frameSize);
       ASSERT_TRUE (buf.Length() == (size_t)frameSize);
       SFrameBSInfo info;
       memset (&info, 0, sizeof (SFrameBSInfo));
       SSourcePicture pic;
       memset (&pic, 0, sizeof (SsourcePicture));
       pic.iPicWidth = width;
       pic.iPicHeight = height;
       pic.iColorFormat = videoFormatI420;
       pic.iStride[0] = pic.iPicWidth;
       pic.iStride[1] = pic.iStride[2] = pic.iPicWidth >> 1;
       pic.pData[0] = buf.data();
       pic.pData[1] = pic.pData[0] + width * height;
       pic.pData[2] = pic.pData[1] + (width * height >> 2);
       for(int num = 0;num<total_num;num++) {
           //prepare input data 
          rv = encoder_->EncodeFrame (&pic, &info);
          ASSERT_TRUE (rv == cmResultSuccess);
          if (info.eFrameType != videoFrameTypeSkip && cbk != NULL) {
           //output bitstream 
          }
       }
  
  Step5:teardown encoder
       if (encoder_) {
           encoder_->Uninitialize();
           WelsDestroySVCEncoder (encoder_);
       }

Example-2 use extension parameter

::

  The same operation on Step 1,3,4,5 with Example-1 
  
  Step 2:initialize by using extension parameter
       SEncParamExt param;
       encoder->GetDefaultParams (&param);
       param.iUsageType = usageType;
       param.fMaxFrameRate = frameRate;
       param.iPicWidth = width;
       param.iPicHeight = height;
       param.iTargetBitrate = 5000000;
       param.iInputCsp = videoFormatI420;
       param.bEnableDenoise = denoise;
       param.iSpatialLayerNum = layers;
       if (sliceMode != SM_SINGLE_SLICE && sliceMode != SM_DYN_SLICE) //SM_DYN_SLICE don't support multi-thread now
           param.iMultipleThreadIdc = 2;
  
       for (int i = 0; i < param.iSpatialLayerNum; i++) {
           param.sSpatialLayers[i].iVideoWidth = width >> (param.iSpatialLayerNum - 1 - i);
           param.sSpatialLayers[i].iVideoHeight = height >> (param.iSpatialLayerNum - 1 - i);
           param.sSpatialLayers[i].fFrameRate = frameRate;
           param.sSpatialLayers[i].iSpatialBitrate = param.iTargetBitrate;
  
           param.sSpatialLayers[i].sSliceCfg.uiSliceMode = sliceMode;
           if (sliceMode == SM_DYN_SLICE) {
               param.sSpatialLayers[i].sSliceCfg.sSliceArgument.uiSliceSizeConstraint = 600;
               param.uiMaxNalSize = 1500;
           }
       }
       param.iTargetBitrate *= param.iSpatialLayerNum;
       encoder_->InitializeExt (&param);






.. _`SEncParamExt`: TypesAndStructures

.. _`ENCODER_OPTION`: TypesAndStructures#wiki-ref-1af450b46a3ff3622f890a12fc16b9a5e0

.. _`SSourcePicture`: TypesAndStructures

.. _`SEncParamBase`: TypesAndStructures

.. _`SFrameBSInfo`: TypesAndStructures

